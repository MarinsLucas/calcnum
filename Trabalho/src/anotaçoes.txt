
class QuadraturaGauss():
    
    def x(self, a, b, t):
        return (((b-a)*t) / 2.0) + ((b+a)/2.0)
        
    def dx(self, a, b):
        return(b-a)/2.0
        
    def Gauss(self, a, b, n, f):
        #recupera pontos da tabela
        tw = TabelaGaussLegendre().getValores(n)
        
        #calcula
        soma = 0
        for i in range (0, n):   
            wi = np.float128(tw[i][1])
            ti = np.float128(tw[i][0])

            soma += wi * f(self.x(a, b, ti)) * self.dx(a, b)

        return soma